spring.datasource.url = jdbc:mysql://sql7.freemysqlhosting.net:3306/sql7245037?useSSL=false
spring.datasource.username = sql7245037
spring.datasource.password = m4sL5MnGzE

#spring.datasource.url = jdbc:mysql://localhost:3306/siem?useSSL=false&createDatabaseIfNotExist=true
#spring.datasource.username = root
#spring.datasource.password = 1234
#
##JPA-Hibernate
spring.jpa.show-sql = true
##kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
##sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = create-drop
#
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#mongodb

spring.data.mongodb.uri= mongodb://admin:admin123@ds121461.mlab.com:21461/siem
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=siem
#spring.data.mongodb.repositories.enabled=true

#logging
logging.level.org.springframework.data=debug
logging.level.=error


#https
#server.port = 8443
# Tell Spring Security (if used) to require requests over HTTPS
#security.require-ssl=true
#server.ssl.enabled=true
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:ia.p12

# The password used to generate the certificate
#server.ssl.key-store-password=adminadmin123






# The format used for the keystore
#server.ssl.key-store-type:PKCS12

server.ssl.enabled-protocols=TLSv1.2

#truststore details
server.ssl.trust-store=classpath:myTrustStore.jks
server.ssl.trust-store-password=admin1234
server.ssl.trust-store-type=JKS

#server.ssl.client-auth=need


server.port: 8443
server.ssl.key-store= classpath:keystore.jks
server.ssl.key-store-password= admin1234
server.ssl.key-store-type= JKS
server.ssl.key-alias= tomcat


